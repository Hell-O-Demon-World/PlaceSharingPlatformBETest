plugins {
    id 'org.springframework.boot' version '2.7.5'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
    id 'java'
}

group = 'com.golfzonaca'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

allprojects {
    repositories {
        mavenCentral()
        maven { url 'https://jitpack.io' }
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'

//  Jasypt
    implementation 'com.github.ulisesbocchio:jasypt-spring-boot-starter:3.0.4'

//  Spring Cache 추가
    implementation 'org.springframework.boot:spring-boot-starter-cache'

//  Caffeine Cache 추가
    implementation 'com.github.ben-manes.caffeine:caffeine'

//  Mail 추가
    implementation 'org.springframework.boot:spring-boot-starter-mail'

//	JPA, Spring Data JPA 추가
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

//  QueryDSL 설정
    implementation "com.querydsl:querydsl-jpa"
    implementation "com.querydsl:querydsl-core"
    implementation "com.querydsl:querydsl-collections"
//  QueryDSL JPAAnnotationProcessor 사용 지정
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jpa"
//  java.lang.NoClassDefFoundError (javax.annotation.Generated) 대응 코드
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
//  java.lang.NoClassDefFoundError (javax.annotation.Entity) 대응 코드
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

//  h2 추가
    runtimeOnly 'com.h2database:h2'

//	MariaDB 추가
    implementation 'org.mariadb.jdbc:mariadb-java-client'

//  Validation 추가
    implementation 'org.springframework.boot:spring-boot-starter-validation'

//  spring security 추가
    implementation 'org.springframework.boot:spring-boot-starter-security'

//  gson 추가
    implementation 'com.google.code.gson:gson:2.10'

//  spring-security-jwt 추가
    implementation 'org.springframework.security:spring-security-jwt:1.1.1.RELEASE'

//  javax.validation 추가
    implementation 'org.springframework.boot:spring-boot-starter-validation'

//  Lombok 추가
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

//  Jitpack 사용
    implementation 'com.github.iamport:iamport-rest-client-java:Tag'

//  retrofit2 사용
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'

//  iamport 사용
    implementation group: 'com.github.iamport', name: 'iamport-rest-client-java', version: '0.2.22'

//  SQL 확인
    implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.8.1'

//  테스트에서 Lombok 사용
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'

//  테스트 추가
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
    useJUnitPlatform()
}

// Querydsl 설정부
def generated = 'src/main/generated'

// querydsl QClass 파일 생성 위치를 지정
tasks.withType(JavaCompile) {
    options.getGeneratedSourceOutputDirectory().set(file(generated))
}

// java source set 에 querydsl QClass 위치 추가
sourceSets {
    main.java.srcDirs += [generated]
}

// gradle clean 시에 QClass 디렉토리 삭제
clean {
    delete file(generated)
}